# Game properties
# property_id : value
# one per line
# values can be amongst the following
# 12345 or #1234AF or 0x1234AF for integer values
# 1. or 1.0 or [1.0] for floating point values
# true or false for boolean values
# "text with quotes" for string values
# [1.5, 2.5, 3.5] for 2D Point
# [1.5, 2.5, 3.5] for 3D Point
# [1.5, 2.5, 3.5, 0.0] for 3D Vector
# list() for an array of values (all elements must match same type)
# nesting is not supported, list can only contain float, int, bool or strings
# the ':' character is reserved, do not use in a string
# whitespaces are automatically trimmed and ignored
seed : 0xF105EB
playerColor : 0x000000
playerSize : [0.8, 1.8]
coverMinSize : [8, 1, 0.8]
coverLineYSpacing : 12
coverCountOdds : list(0.05, 0.7, 0.2, 0.5)
coverColors : list(0x0000FF, 0xFFFFFF, 0xFF0000)
floorColors : list(0x68DB61, 0x18AC11)

coverEdgeRepeat : 5
# coverLimitRepeat is minimum the number of cover lines between two edge cases
# for instance, if it is 5, there will be at least 5 "normal" cover lines between
# two similar edge cases (either 0 covers in a line, or 3 covers in a line)

coverSizeNoise : [0.5, 0.35, 0.2]
# final cover size is calculated with this formula on each dimension
#     coverMinSize.x * (1 + rand.srand(coverSizeNoise.x)) -- x taken as example

coverPosNoise : [0.03, 0.02]
# final cover pos is adjusted with the fowllowing formula
#     cover.x += Map.WIDTH * rand.srand(coverPosNoise.x)
#     cover.y += coverspace * rand.srand(coverPosNoise.y);


################################## DEBUG
showSlot : false